spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password = Moji1313@sumathi
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.generator-ddl = true
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

spring.application.name = order-service

#eureka.client.serviceUrl.defaultZone = "http://localhost:8761/eureka"

management.endpoints.web.exposure.include = *
management.info.env.enabled = true

info.app.name = order-service
info.app.description = This service is responsible for placing orders
info.app.version = 1.1

management.health.circuitbreakers.enabled = true
management.endpoint.health.show-details = always

# RESILIENCE 4J PROPERTIES
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.orderToInventoryCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true

# RESILIENCE 4J TIMEOUT PROPERTIES
resilience4j.timelimiter.instances.orderToInventoryCircuitBreaker.timeout-duration = 3s

# RESILIENCE 4J RETRY PROPERTIES
resilience4j.retry.instances.orderToInventoryCircuitBreaker.max-attempts = 3
resilience4j.retry.instances.orderToInventoryCircuitBreaker.wait-duration = 5s

spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.template.default-topic = notificationTopic
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping = event:com.mojicode.orderservice.event.OrderPlacedEvent

server.port = 8082